properties([
	gitLabConnection('gitlab')
])

node('words-linux') {         
    try {
		gitlabCommitStatus("checkout again") {
			stage('checkout again'){
			   checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/words-cloud/words-cloud-node.git']]])          
			}
		}
        
		gitlabCommitStatus("create health check") {
			stage('create health check branch'){
                sh "sed -i 's/asposewordscloud/healthcheck/g' package.json"
            
                sh "npm uninstall asposewordscloud"
                sh "npm install asposewordscloud"
                
                sh "find test -type f -name \"*.ts\" -exec sed -i 's+\".*/src/.*\"+\"asposewordscloud\"+g' {} +"
                sh "find bdd -type f -name \"*.ts\" -exec sed -i 's+\".*/src/.*\"+\"asposewordscloud\"+g' {} +"

                sh "git stash"
                
                sh "git config user.email \"jenkins.aspose@gmail.com\""
                sh "git config user.name \"jenkins\""
                
                withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
                    sh "git push -d https://$gitUsername:$gitPass@git.auckland.dynabic.com/words-cloud/words-cloud-node.git health_check"
                }
                sh "git branch -D health_check"
                
                sh "git checkout -b health_check"
                sh "git stash pop"
                sh 'git commit -am "Create health check branch" || exit 0'
        
                withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
                    sh "git push -u https://$gitUsername:$gitPass@git.auckland.dynabic.com/words-cloud/words-cloud-node.git health_check"
                }
            }
        }
        
    } finally {                       
        deleteDir()
		sh 'docker system prune -f'
    }
} 